// Code generated by ent, DO NOT EDIT.

package orderitem

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/dongwlin/legero-backend/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldID, id))
}

// DailyID applies equality check predicate on the "daily_id" field. It's identical to DailyIDEQ.
func DailyID(v uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldDailyID, v))
}

// IncludeNoodles applies equality check predicate on the "include_noodles" field. It's identical to IncludeNoodlesEQ.
func IncludeNoodles(v bool) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldIncludeNoodles, v))
}

// CustomNoodleType applies equality check predicate on the "custom_noodle_type" field. It's identical to CustomNoodleTypeEQ.
func CustomNoodleType(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldCustomNoodleType, v))
}

// ExtraNoodleBlocks applies equality check predicate on the "extra_noodle_blocks" field. It's identical to ExtraNoodleBlocksEQ.
func ExtraNoodleBlocks(v int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldExtraNoodleBlocks, v))
}

// CustomSizePrice applies equality check predicate on the "custom_size_price" field. It's identical to CustomSizePriceEQ.
func CustomSizePrice(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldCustomSizePrice, v))
}

// Note applies equality check predicate on the "note" field. It's identical to NoteEQ.
func Note(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldNote, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldPrice, v))
}

// CompletedAt applies equality check predicate on the "completed_at" field. It's identical to CompletedAtEQ.
func CompletedAt(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldCompletedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldCreatedAt, v))
}

// DailyIDEQ applies the EQ predicate on the "daily_id" field.
func DailyIDEQ(v uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldDailyID, v))
}

// DailyIDNEQ applies the NEQ predicate on the "daily_id" field.
func DailyIDNEQ(v uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldDailyID, v))
}

// DailyIDIn applies the In predicate on the "daily_id" field.
func DailyIDIn(vs ...uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldDailyID, vs...))
}

// DailyIDNotIn applies the NotIn predicate on the "daily_id" field.
func DailyIDNotIn(vs ...uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldDailyID, vs...))
}

// DailyIDGT applies the GT predicate on the "daily_id" field.
func DailyIDGT(v uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldDailyID, v))
}

// DailyIDGTE applies the GTE predicate on the "daily_id" field.
func DailyIDGTE(v uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldDailyID, v))
}

// DailyIDLT applies the LT predicate on the "daily_id" field.
func DailyIDLT(v uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldDailyID, v))
}

// DailyIDLTE applies the LTE predicate on the "daily_id" field.
func DailyIDLTE(v uint64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldDailyID, v))
}

// IncludeNoodlesEQ applies the EQ predicate on the "include_noodles" field.
func IncludeNoodlesEQ(v bool) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldIncludeNoodles, v))
}

// IncludeNoodlesNEQ applies the NEQ predicate on the "include_noodles" field.
func IncludeNoodlesNEQ(v bool) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldIncludeNoodles, v))
}

// NoodleTypeEQ applies the EQ predicate on the "noodle_type" field.
func NoodleTypeEQ(v NoodleType) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldNoodleType, v))
}

// NoodleTypeNEQ applies the NEQ predicate on the "noodle_type" field.
func NoodleTypeNEQ(v NoodleType) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldNoodleType, v))
}

// NoodleTypeIn applies the In predicate on the "noodle_type" field.
func NoodleTypeIn(vs ...NoodleType) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldNoodleType, vs...))
}

// NoodleTypeNotIn applies the NotIn predicate on the "noodle_type" field.
func NoodleTypeNotIn(vs ...NoodleType) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldNoodleType, vs...))
}

// CustomNoodleTypeEQ applies the EQ predicate on the "custom_noodle_type" field.
func CustomNoodleTypeEQ(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldCustomNoodleType, v))
}

// CustomNoodleTypeNEQ applies the NEQ predicate on the "custom_noodle_type" field.
func CustomNoodleTypeNEQ(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldCustomNoodleType, v))
}

// CustomNoodleTypeIn applies the In predicate on the "custom_noodle_type" field.
func CustomNoodleTypeIn(vs ...string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldCustomNoodleType, vs...))
}

// CustomNoodleTypeNotIn applies the NotIn predicate on the "custom_noodle_type" field.
func CustomNoodleTypeNotIn(vs ...string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldCustomNoodleType, vs...))
}

// CustomNoodleTypeGT applies the GT predicate on the "custom_noodle_type" field.
func CustomNoodleTypeGT(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldCustomNoodleType, v))
}

// CustomNoodleTypeGTE applies the GTE predicate on the "custom_noodle_type" field.
func CustomNoodleTypeGTE(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldCustomNoodleType, v))
}

// CustomNoodleTypeLT applies the LT predicate on the "custom_noodle_type" field.
func CustomNoodleTypeLT(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldCustomNoodleType, v))
}

// CustomNoodleTypeLTE applies the LTE predicate on the "custom_noodle_type" field.
func CustomNoodleTypeLTE(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldCustomNoodleType, v))
}

// CustomNoodleTypeContains applies the Contains predicate on the "custom_noodle_type" field.
func CustomNoodleTypeContains(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldContains(FieldCustomNoodleType, v))
}

// CustomNoodleTypeHasPrefix applies the HasPrefix predicate on the "custom_noodle_type" field.
func CustomNoodleTypeHasPrefix(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldHasPrefix(FieldCustomNoodleType, v))
}

// CustomNoodleTypeHasSuffix applies the HasSuffix predicate on the "custom_noodle_type" field.
func CustomNoodleTypeHasSuffix(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldHasSuffix(FieldCustomNoodleType, v))
}

// CustomNoodleTypeEqualFold applies the EqualFold predicate on the "custom_noodle_type" field.
func CustomNoodleTypeEqualFold(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEqualFold(FieldCustomNoodleType, v))
}

// CustomNoodleTypeContainsFold applies the ContainsFold predicate on the "custom_noodle_type" field.
func CustomNoodleTypeContainsFold(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldContainsFold(FieldCustomNoodleType, v))
}

// NoodleAmountEQ applies the EQ predicate on the "noodle_amount" field.
func NoodleAmountEQ(v NoodleAmount) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldNoodleAmount, v))
}

// NoodleAmountNEQ applies the NEQ predicate on the "noodle_amount" field.
func NoodleAmountNEQ(v NoodleAmount) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldNoodleAmount, v))
}

// NoodleAmountIn applies the In predicate on the "noodle_amount" field.
func NoodleAmountIn(vs ...NoodleAmount) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldNoodleAmount, vs...))
}

// NoodleAmountNotIn applies the NotIn predicate on the "noodle_amount" field.
func NoodleAmountNotIn(vs ...NoodleAmount) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldNoodleAmount, vs...))
}

// ExtraNoodleBlocksEQ applies the EQ predicate on the "extra_noodle_blocks" field.
func ExtraNoodleBlocksEQ(v int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldExtraNoodleBlocks, v))
}

// ExtraNoodleBlocksNEQ applies the NEQ predicate on the "extra_noodle_blocks" field.
func ExtraNoodleBlocksNEQ(v int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldExtraNoodleBlocks, v))
}

// ExtraNoodleBlocksIn applies the In predicate on the "extra_noodle_blocks" field.
func ExtraNoodleBlocksIn(vs ...int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldExtraNoodleBlocks, vs...))
}

// ExtraNoodleBlocksNotIn applies the NotIn predicate on the "extra_noodle_blocks" field.
func ExtraNoodleBlocksNotIn(vs ...int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldExtraNoodleBlocks, vs...))
}

// ExtraNoodleBlocksGT applies the GT predicate on the "extra_noodle_blocks" field.
func ExtraNoodleBlocksGT(v int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldExtraNoodleBlocks, v))
}

// ExtraNoodleBlocksGTE applies the GTE predicate on the "extra_noodle_blocks" field.
func ExtraNoodleBlocksGTE(v int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldExtraNoodleBlocks, v))
}

// ExtraNoodleBlocksLT applies the LT predicate on the "extra_noodle_blocks" field.
func ExtraNoodleBlocksLT(v int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldExtraNoodleBlocks, v))
}

// ExtraNoodleBlocksLTE applies the LTE predicate on the "extra_noodle_blocks" field.
func ExtraNoodleBlocksLTE(v int) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldExtraNoodleBlocks, v))
}

// SizeEQ applies the EQ predicate on the "size" field.
func SizeEQ(v Size) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldSize, v))
}

// SizeNEQ applies the NEQ predicate on the "size" field.
func SizeNEQ(v Size) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldSize, v))
}

// SizeIn applies the In predicate on the "size" field.
func SizeIn(vs ...Size) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldSize, vs...))
}

// SizeNotIn applies the NotIn predicate on the "size" field.
func SizeNotIn(vs ...Size) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldSize, vs...))
}

// CustomSizePriceEQ applies the EQ predicate on the "custom_size_price" field.
func CustomSizePriceEQ(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldCustomSizePrice, v))
}

// CustomSizePriceNEQ applies the NEQ predicate on the "custom_size_price" field.
func CustomSizePriceNEQ(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldCustomSizePrice, v))
}

// CustomSizePriceIn applies the In predicate on the "custom_size_price" field.
func CustomSizePriceIn(vs ...float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldCustomSizePrice, vs...))
}

// CustomSizePriceNotIn applies the NotIn predicate on the "custom_size_price" field.
func CustomSizePriceNotIn(vs ...float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldCustomSizePrice, vs...))
}

// CustomSizePriceGT applies the GT predicate on the "custom_size_price" field.
func CustomSizePriceGT(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldCustomSizePrice, v))
}

// CustomSizePriceGTE applies the GTE predicate on the "custom_size_price" field.
func CustomSizePriceGTE(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldCustomSizePrice, v))
}

// CustomSizePriceLT applies the LT predicate on the "custom_size_price" field.
func CustomSizePriceLT(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldCustomSizePrice, v))
}

// CustomSizePriceLTE applies the LTE predicate on the "custom_size_price" field.
func CustomSizePriceLTE(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldCustomSizePrice, v))
}

// GreensEQ applies the EQ predicate on the "greens" field.
func GreensEQ(v Greens) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldGreens, v))
}

// GreensNEQ applies the NEQ predicate on the "greens" field.
func GreensNEQ(v Greens) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldGreens, v))
}

// GreensIn applies the In predicate on the "greens" field.
func GreensIn(vs ...Greens) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldGreens, vs...))
}

// GreensNotIn applies the NotIn predicate on the "greens" field.
func GreensNotIn(vs ...Greens) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldGreens, vs...))
}

// ScallionEQ applies the EQ predicate on the "scallion" field.
func ScallionEQ(v Scallion) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldScallion, v))
}

// ScallionNEQ applies the NEQ predicate on the "scallion" field.
func ScallionNEQ(v Scallion) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldScallion, v))
}

// ScallionIn applies the In predicate on the "scallion" field.
func ScallionIn(vs ...Scallion) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldScallion, vs...))
}

// ScallionNotIn applies the NotIn predicate on the "scallion" field.
func ScallionNotIn(vs ...Scallion) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldScallion, vs...))
}

// PepperEQ applies the EQ predicate on the "pepper" field.
func PepperEQ(v Pepper) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldPepper, v))
}

// PepperNEQ applies the NEQ predicate on the "pepper" field.
func PepperNEQ(v Pepper) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldPepper, v))
}

// PepperIn applies the In predicate on the "pepper" field.
func PepperIn(vs ...Pepper) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldPepper, vs...))
}

// PepperNotIn applies the NotIn predicate on the "pepper" field.
func PepperNotIn(vs ...Pepper) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldPepper, vs...))
}

// DiningMethodEQ applies the EQ predicate on the "dining_method" field.
func DiningMethodEQ(v DiningMethod) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldDiningMethod, v))
}

// DiningMethodNEQ applies the NEQ predicate on the "dining_method" field.
func DiningMethodNEQ(v DiningMethod) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldDiningMethod, v))
}

// DiningMethodIn applies the In predicate on the "dining_method" field.
func DiningMethodIn(vs ...DiningMethod) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldDiningMethod, vs...))
}

// DiningMethodNotIn applies the NotIn predicate on the "dining_method" field.
func DiningMethodNotIn(vs ...DiningMethod) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldDiningMethod, vs...))
}

// PackagingEQ applies the EQ predicate on the "packaging" field.
func PackagingEQ(v Packaging) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldPackaging, v))
}

// PackagingNEQ applies the NEQ predicate on the "packaging" field.
func PackagingNEQ(v Packaging) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldPackaging, v))
}

// PackagingIn applies the In predicate on the "packaging" field.
func PackagingIn(vs ...Packaging) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldPackaging, vs...))
}

// PackagingNotIn applies the NotIn predicate on the "packaging" field.
func PackagingNotIn(vs ...Packaging) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldPackaging, vs...))
}

// PackagingMethodEQ applies the EQ predicate on the "packaging_method" field.
func PackagingMethodEQ(v PackagingMethod) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldPackagingMethod, v))
}

// PackagingMethodNEQ applies the NEQ predicate on the "packaging_method" field.
func PackagingMethodNEQ(v PackagingMethod) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldPackagingMethod, v))
}

// PackagingMethodIn applies the In predicate on the "packaging_method" field.
func PackagingMethodIn(vs ...PackagingMethod) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldPackagingMethod, vs...))
}

// PackagingMethodNotIn applies the NotIn predicate on the "packaging_method" field.
func PackagingMethodNotIn(vs ...PackagingMethod) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldPackagingMethod, vs...))
}

// NoteEQ applies the EQ predicate on the "note" field.
func NoteEQ(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldNote, v))
}

// NoteNEQ applies the NEQ predicate on the "note" field.
func NoteNEQ(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldNote, v))
}

// NoteIn applies the In predicate on the "note" field.
func NoteIn(vs ...string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldNote, vs...))
}

// NoteNotIn applies the NotIn predicate on the "note" field.
func NoteNotIn(vs ...string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldNote, vs...))
}

// NoteGT applies the GT predicate on the "note" field.
func NoteGT(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldNote, v))
}

// NoteGTE applies the GTE predicate on the "note" field.
func NoteGTE(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldNote, v))
}

// NoteLT applies the LT predicate on the "note" field.
func NoteLT(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldNote, v))
}

// NoteLTE applies the LTE predicate on the "note" field.
func NoteLTE(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldNote, v))
}

// NoteContains applies the Contains predicate on the "note" field.
func NoteContains(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldContains(FieldNote, v))
}

// NoteHasPrefix applies the HasPrefix predicate on the "note" field.
func NoteHasPrefix(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldHasPrefix(FieldNote, v))
}

// NoteHasSuffix applies the HasSuffix predicate on the "note" field.
func NoteHasSuffix(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldHasSuffix(FieldNote, v))
}

// NoteEqualFold applies the EqualFold predicate on the "note" field.
func NoteEqualFold(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEqualFold(FieldNote, v))
}

// NoteContainsFold applies the ContainsFold predicate on the "note" field.
func NoteContainsFold(v string) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldContainsFold(FieldNote, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v float64) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldPrice, v))
}

// ProgressNoodlesEQ applies the EQ predicate on the "progress_noodles" field.
func ProgressNoodlesEQ(v ProgressNoodles) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldProgressNoodles, v))
}

// ProgressNoodlesNEQ applies the NEQ predicate on the "progress_noodles" field.
func ProgressNoodlesNEQ(v ProgressNoodles) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldProgressNoodles, v))
}

// ProgressNoodlesIn applies the In predicate on the "progress_noodles" field.
func ProgressNoodlesIn(vs ...ProgressNoodles) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldProgressNoodles, vs...))
}

// ProgressNoodlesNotIn applies the NotIn predicate on the "progress_noodles" field.
func ProgressNoodlesNotIn(vs ...ProgressNoodles) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldProgressNoodles, vs...))
}

// ProgressMeatEQ applies the EQ predicate on the "progress_meat" field.
func ProgressMeatEQ(v ProgressMeat) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldProgressMeat, v))
}

// ProgressMeatNEQ applies the NEQ predicate on the "progress_meat" field.
func ProgressMeatNEQ(v ProgressMeat) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldProgressMeat, v))
}

// ProgressMeatIn applies the In predicate on the "progress_meat" field.
func ProgressMeatIn(vs ...ProgressMeat) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldProgressMeat, vs...))
}

// ProgressMeatNotIn applies the NotIn predicate on the "progress_meat" field.
func ProgressMeatNotIn(vs ...ProgressMeat) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldProgressMeat, vs...))
}

// CompletedAtEQ applies the EQ predicate on the "completed_at" field.
func CompletedAtEQ(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldCompletedAt, v))
}

// CompletedAtNEQ applies the NEQ predicate on the "completed_at" field.
func CompletedAtNEQ(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldCompletedAt, v))
}

// CompletedAtIn applies the In predicate on the "completed_at" field.
func CompletedAtIn(vs ...time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldCompletedAt, vs...))
}

// CompletedAtNotIn applies the NotIn predicate on the "completed_at" field.
func CompletedAtNotIn(vs ...time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldCompletedAt, vs...))
}

// CompletedAtGT applies the GT predicate on the "completed_at" field.
func CompletedAtGT(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldCompletedAt, v))
}

// CompletedAtGTE applies the GTE predicate on the "completed_at" field.
func CompletedAtGTE(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldCompletedAt, v))
}

// CompletedAtLT applies the LT predicate on the "completed_at" field.
func CompletedAtLT(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldCompletedAt, v))
}

// CompletedAtLTE applies the LTE predicate on the "completed_at" field.
func CompletedAtLTE(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldCompletedAt, v))
}

// CompletedAtIsNil applies the IsNil predicate on the "completed_at" field.
func CompletedAtIsNil() predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIsNull(FieldCompletedAt))
}

// CompletedAtNotNil applies the NotNil predicate on the "completed_at" field.
func CompletedAtNotNil() predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotNull(FieldCompletedAt))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.OrderItem {
	return predicate.OrderItem(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderItem) predicate.OrderItem {
	return predicate.OrderItem(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderItem) predicate.OrderItem {
	return predicate.OrderItem(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderItem) predicate.OrderItem {
	return predicate.OrderItem(sql.NotPredicates(p))
}
